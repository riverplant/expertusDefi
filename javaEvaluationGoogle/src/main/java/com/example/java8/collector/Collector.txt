Collector接口方法
1.Reducing and summarizing elements to a single value
/**
	 * 按照颜色分组
	 * @param apples
	 * @return
	 */
	private static Map<String,List<Apple>> groupByNormal(List<Apple> apples){
		return apples.stream().collect(Collectors.groupingBy(Apple::getColor));
	}

2.Grouping elements



3.Partitioning elements


4.cusome Collector

******************************************************************************
/**
T:List中元素的类型
A:accumulator 累加器类型,容器
R:返回值类型
*/
public interface Collector<T,A,R>{

   Stream--->
   
   Supplier<A> supplier();//提供者
   --->return a new mutable result container
   --->container = collector.supplier.get();
   
   BiConsumer<A,T> accumulator();//累加器,容器
   ----->accumulator = collector.accumulator();
   ------>forEach(u ->accumulator.accept(container,u));
   
   BinaryOperator<A> combiner();//调用join方法并行计算，聚合-->BiFunction<T,U,R>
   
   Function<A,R> finisher();//返回的结果
   
   Set<Characteristice> characteristics//collector的特征：concurrent,unordered,identity_finish
   
   ******************************************************************************
 

}