interface default method / static method :

public static void main(String[] args) {
		A a = ()->10;
		a.isVide();
		a.size();
		
	}
    @FunctionalInterface
	private interface A{
    	
		int size();
		
		/**
		 * 
		 * @return
		 */
		default boolean isVide() {
			return size()==0;
		}
	}//A
	
******************************************************************************************
1.Class优先级最高：定义在Class自己内部的方法优先级最高
2.sub-interface优先于interface // b extends a ->b优先于a
3.当现实的接口之间没有关系，所以调用的方法无法确定的时候，必须自己重写该方法

private interface A{
default void hello(){
System.out.println("a.hello");
}
private interface B extends A{
@Override
default void hello(){
System.out.println("b.hello");
}

private static class C implements B,A{

}

public static void main(String[] args){
C c  = new C();
c.hello();//b.hello
}
}
***************************************************************