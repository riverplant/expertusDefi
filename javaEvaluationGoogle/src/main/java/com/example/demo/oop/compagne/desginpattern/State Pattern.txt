/**
 * State Pattern
 * Role-object Pattern
 * @author riverplant
 *
 */
public interface Role {
void doWork();
}

public class Engineer implements Role {

	@Override
	public void doWork() {
		System.out.println("Doing engineer ok");
	}

	@Override
	public String toString() {
		return "Engineer";
	}
}

package com.example.demo.oop.compagne;

import java.util.List;
import java.util.Objects;

import com.example.demo.oop.compagne.desginpattern.Role;

public class Employee {
static List<Employee> allEmployees;
private final String name;
private final int slary;
private Role role;

public Role getRole() {
	return role;
}

public void setRole(Role role) {
	this.role = role;
}

public Employee(String name, int slary,Role role) {
	super();
	this.name = name;
	this.slary = slary;
	this.role = role;
}

public static List<Employee> getAllEmployees() {
	return allEmployees;
}

public static void setAllEmployees(List<Employee> allEmployees) {
	Employee.allEmployees = allEmployees;
}

public String getName() {
	return name;
}

public void doWork() {
	role.doWork();
}

}
